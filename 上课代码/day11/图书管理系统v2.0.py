
'''
图书管理系统：升级   函数版
    - 函数 拆分 1.0代码程序
    - 1.0代码中 抽离出 功能代码块  - 封装成功能函数
函数：特定功能的代码块
    - 函数是什么？作用？
    - 函数创建 调用 参数 return 作用域

'''
'''
图书管理系统：
    - 初始化
        - 注册  函数
        - 登录  函数
            - 登录成功之后 图书操作
                - 增加  函数
                - 修改  函数
                - 删除 函数
                - 查询 函数
'''
# 管理员信息库
# 管理员：账号 密码
admin_list = [['weidong','123']]
# 书库
book_list = [
    ['钢铁是怎样炼成的',9.9,'孔祥泽','李浩出版社'],
    ['坏蛋是怎样炼成的',9.9,'磊哥','磊哥出版社'],
    ['中华字典',59.9,'康熙','清朝出版社'],
    ['python从入门到精通',29.9,'肖枫','肖枫出版社'],
]

# 进行业务操作
'''
管理系统：
    - 登录
'''
# 登录 注册
choice = input('请输入指令：登录 1 \n 注册 2：')

if choice == '1':
    # 登录验证
#     输入用户名 密码
    name = input('请输入用户名：')
    pwd = input('请输入密码：')
    for admin in admin_list:
        if admin[0] == name and admin[1] == pwd:
            print('登录成功')
        #     操作 图书管理  图书 增删改查
        # 增加
        # 删除 某一本书？ 列表 查找？保证能够找到，删除
        # 改 修改 那一本？ 修改什么信息？ 价格？作业？
        # 查 查询
        #      通过 书名？   作者？ 价格？ 出版社？ 查询 打印输出 当前查询到所有书的信息 格式清晰
        else:
            print('登录失败，请重新登录！')

elif choice == '2':
    # 注册
    # 先输入用户名，判断 数据库中是否已存在，如果存在 该账号已被注册
    # 保证用户名可用，之后 再输入密码，二次验证 最终添加到数据库
    name = input('请输入用户名:')
    if name in admin_list:
        print('账号已存在')
    else:
        pwd = input('请输入密码:')
        pwd1 = input('请输入密码:')
        #     添加到 数据库中 list中
        admin_list.append([name, pwd])
        print(admin_list)
else:
    print('指令有误，请重新输入！')